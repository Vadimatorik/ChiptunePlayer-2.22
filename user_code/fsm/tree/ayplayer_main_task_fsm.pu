@startuml

[*] --> start

state "init_gui" as start {
start: Инициализируется 
start: драйвер дисплея.
}

start --> fgui: 1 
start --> fl: 2
state "gui_fall" as fgui {
fgui: Ошибка в библиотеке 
fgui: MakiseGUI. Может быть 
fgui: вызвана проблемами с 
fgui: драйвером LCD (и SPI).
fgui: Микроконтроллер будет 
fgui: перезагружен.
}

state "logger_fall" as fl {
fl: Ошибка в работе логгера.
fl: Может быть вызвана 
fl: неисправностью UART-модуля.
fl: Микроконтроллер будет 
fl: перезагружен.
}

start --> s1: 0

state "fat_init" as s1 {
s1: Инициализируется FAT.
}

s1 --> ffat: 1
s1 --> fl: 2

state "fat_fall" as ffat {
ffat: Инициализация FatFS не удалась. 
ffat: Микроконтроллер будет 
ffat: перезагружен.
}

s1 --> s2: 0

state "sd1_check" as s2 {
s2: Проверяем наличие карты 
s2: пользователя. 
s2: (SD1 подключена по SDIO).
s2: Карта обнаружена:\t\t0.
s2: Карта не была обнаружена:\t1.
s2: Ошибка логгера:\t\t\t2.
}

s2 --> s3: 0
s2 --> fsdio: 1
s2 --> fl: 2

state "check_playlist_sys" as s3 {
s3: Проверяем наличие файла-списка
s3: с треками в главной директории.
s3: Возвращаемое значение:
s3: Ошибка SD карты:\t1.
s3: Ошибка логгера:\t2.
s3: Файла нет:\t\t3.
}

state "sd1_fall" as fsdio {
fsdio: Упала SDIO.
fsdio: Перезагружаем МК.
}

s3 --> fsdio: 1
s3 --> fl: 2
s3 --> s4: 3

state "create_playlist_sys" as s4 {
s4: Возвращаемое значение:
s4: Ошибка SD карты (аппартная):\t1.
s4: Ошибка логгера:\t\t\t\t2.
s4: Не удается создать файл:\t\t3.
}

@enduml